openapi: 3.0.3
info:
  title: expenses
  description: |-
    sample expense demo

  contact:
    email: farookismail412@gmail.com
  version: 1.0.0
servers:
  - url: http://localhost:4000
paths:
  /expense:
    get:
      description: get All the expenses
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/expenses"

    post:
      description: posting the expense
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/expense"

      responses:
        "200":
          description: suucessfully added  the expenses
        "400":
          description: error in input

  /expense/{id}:
    description: Get expense by Id
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/expense"
  /createReport:
    description: Get report for a period
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/period"
      responses:
        "200":
          description: monthly report successfully created in the same folder
  /categoryReport:
    description: Get expense report  by category
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/period"
      responses:
        "200":
          description: monthly report successfully created in the same folder
components:
  schemas:
    expenses:
      type: array
      items:
        properties:
          id:
            type: integer
            example: 1
          category:
            type: string
            example: transport
          title:
            type: string
            example: movies
          cost:
            type: integer
            example: 10

    expense:
      type: object
      properties:
        category:
          type: string
          example: transport
        title:
          type: string
          example: movies
        cost:
          type: integer
          example: 10

    period:
      type: object
      properties:
        from:
          type: string
          example: 09-10-2022
        to:
          type: string
          example: 09-30-2022
